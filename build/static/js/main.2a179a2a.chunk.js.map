{"version":3,"sources":["components/MainContent/Profile/MyPosts/MyPosts.module.css","components/MainContent/Profile/MyPosts/Post/Posts.module.css","components/MainContent/MainContent.module.css","components/Header/Header.module.css","components/MainContent/Profile/Profile.module.css","components/MainContent/Profile/ProfileInfo/ProfileInfo.module.css","components/MainContent/Navbar/Navbar.module.css","assets/main-logo.png","assets/cat.jpg","components/MainContent/Dialogs/Dialogs.module.css","assets/cat2.jpg","components/Header/Header.jsx","components/MainContent/Navbar/Navbar.jsx","redux/profile-reducer.js","components/MainContent/Profile/MyPosts/Post/Post.jsx","components/MainContent/Profile/MyPosts/MyPosts.jsx","components/MainContent/Profile/MyPosts/MyPostsContainer.jsx","components/MainContent/Profile/ProfileInfo/ProfileInfo.jsx","components/MainContent/Profile/Profile.jsx","components/MainContent/Users/Users.jsx","redux/users-reducer.js","components/MainContent/Users/UsersContainer.jsx","components/MainContent/Dialogs/Message/Message.jsx","components/MainContent/Dialogs/DialogItem/DialogItem.jsx","components/MainContent/Dialogs/Dialogs.jsx","redux/dialogs-reducer.js","components/MainContent/Dialogs/DialogsContainer.jsx","components/MainContent/MainContent.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","StoreContext.js","components/MainContent/Users/Users.module.css"],"names":["module","exports","Header","className","classes","header","src","require","Navbar","nav","item","to","activeClassName","active","href","initialState","postData","id","message","likesCount","newPostText","profileReducer","state","action","type","newPostId","length","newPost","postMessage","newText","Post","props","title","photo","countOfLikes","MyPosts","postsData","profilePage","map","post","newPostElement","React","createRef","console","log","postsBlock","postsTitle","addPostBlock","onChange","text","current","value","onPostChange","ref","onClick","addPost","posts","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreator","addPostActionCreator","ProfileInfo","avaAndDescr","Profile","profileWrapper","Users","axios","then","response","setUsers","data","items","usersThis","this","usersWrapper","users","u","key","usersItem","usersLeft","photoUrl","followed","followButton","unfollow","follow","usersRight","userName","name","status","Component","usersReducer","userId","usersPage","followAC","unfollowAC","setUsersAC","Message","DialogItem","path","dialog","Dialogs","dialogsElements","dialogsPage","dialogsData","messagesElements","messagesData","newMessageBody","dialogs","dialogsItems","messages","textArea","event","body","target","newMessageChange","placeholder","btnSend","sendMessageClick","dialogsReducer","DialogsContainer","updateNewMessageBodyCreator","MainContent","mainContent","appWrapperContent","render","UsersContainer","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","rerenderEntireTree","createContext","ReactDOM","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a179a2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostBlock\":\"MyPosts_addPostBlock__lmnx9\",\"postsTitle\":\"MyPosts_postsTitle__2plxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__jGC-t\",\"title\":\"Posts_title__1MYUk\",\"photo\":\"Posts_photo__2sfka\",\"countOfLikes\":\"Posts_countOfLikes__2s_h_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"MainContent_mainContent__331bK\",\"appWrapperContent\":\"MainContent_appWrapperContent__1wbV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__18GIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__1t13K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaAndDescr\":\"ProfileInfo_avaAndDescr__1-2ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2G1i0\",\"item\":\"Navbar_item__mSNmG\",\"active\":\"Navbar_active__3l5mu\"};","module.exports = __webpack_public_path__ + \"static/media/main-logo.602e2b58.png\";","module.exports = __webpack_public_path__ + \"static/media/cat.fc93ce74.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__AmuDo\",\"dialogsItems\":\"Dialogs_dialogsItems__F3ZKu\",\"messages\":\"Dialogs_messages__3jdAq\",\"dialog\":\"Dialogs_dialog__Nbns4\",\"message\":\"Dialogs_message__1XlU1\",\"btnSend\":\"Dialogs_btnSend__qJmV_\",\"textArea\":\"Dialogs_textArea__2fA7g\"};","module.exports = __webpack_public_path__ + \"static/media/cat2.e803ebaa.jpg\";","import React from 'react';\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n\treturn <header className ={classes.header}>\r\n         <img src={require(\"./../../assets/main-logo.png\")}/>\r\n      </header>;\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\treturn <nav className={classes.nav}>\r\n         <div className={classes.item}>\r\n           <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n         </div>\r\n         <div className={classes.item}>\r\n           <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\r\n         </div>\r\n         <div className={classes.item}>\r\n           <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\r\n         </div>\r\n         <div className={classes.item}>\r\n           <a href=\"#\">News</a>\r\n         </div>\r\n         <div className={classes.item}>\r\n           <a href=\"#\">Music</a>\r\n         </div>\r\n         <div className={classes.item}>\r\n           <a href=\"#\">Settings</a>\r\n         </div>\r\n      </nav>;\r\n}\r\n\r\nexport default Navbar;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    postData: [\r\n     {id:1, message:\"Hi, How are you?\", likesCount:12 },\r\n     {id:2, message:\"It's my first post!\", likesCount:12},\r\n     {id:3, message:\"Blabla\", likesCount:11},\r\n     {id:4, message:\"Dada\", likesCount:11}\r\n    ],\r\n    newPostText:'it-kamasutra.com'\t\r\n};\t  \r\n\r\nconst profileReducer = (state = initialState,action) => {\r\n\r\n    switch(action.type){\r\n        case ADD_POST:{\r\n            let newPostId = state.postData[state.postData.length - 1].id + 1;\r\n            let newPost = {\r\n                id:newPostId,\r\n                message:action.postMessage,\r\n                likesCount:0 \r\n            };\r\n            return {\r\n               ...state,\r\n               postData:[...state.postData,newPost],\r\n               newPostText:\"\"\r\n            };\r\n        }    \r\n        case UPDATE_NEW_POST_TEXT:{  \r\n            return{\r\n                ...state,\r\n                newPostText:action.newText\r\n            };\r\n        }    \r\n        default:\r\n            return state;       \r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (text) => ({type:ADD_POST,postMessage:text});\r\nexport const updateNewPostTextActionCreator = (text) => ({type:UPDATE_NEW_POST_TEXT,newText:text});\r\n\r\nexport default profileReducer; ","import React from 'react';\r\nimport classes from \"./Posts.module.css\";\r\n\r\nconst Post = (props) => {\r\n\treturn  <div className={classes.item}>\r\n\t             <div className={classes.title}>Пост №{props.id}</div>\r\n\t             <img className={classes.photo} src={require(\"./../../../../../assets/cat.jpg\")}/>\r\n\t             {props.message}\r\n\t             <div className={classes.countOfLikes}>\r\n\t               {props.likesCount} лайков\r\n\t             </div>\r\n\t        </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n   let postsData = props.profilePage.postData.map(post => <Post id={post.id} message={post.message} likesCount={post.likesCount}/>);\r\n   let newPostElement = React.createRef();\r\n   console.log(props);\r\n   let onAddPost = () => {\r\n     let text = newPostElement.current.value;\r\n     props.addPost(text);\r\n   }\r\n   let onPostChange = () => {\r\n     let text = newPostElement.current.value;\r\n     props.onPostChange(text);\r\n   } \r\n\treturn <div className={classes.postsBlock}>\r\n          <h3 className={classes.postsTitle}>my posts</h3>\r\n          <div className={classes.addPostBlock}>\r\n            <textarea onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}>\r\n            \t \r\n            </textarea>\r\n            <button onClick={onAddPost}>Add post</button>\r\n          </div>\r\n          <div className={classes.posts}>\r\n            {postsData}\r\n          </div>\r\n        </div>;\r\n     \r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {updateNewPostTextActionCreator,addPostActionCreator} from \"./../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n/*import StoreContext from \"./../../../../StoreContext\";*/\r\nimport {connect} from \"react-redux\";\r\n\r\n/*const MyPostsContainer = (props) => { \r\n\t return (\r\n     <StoreContext.Consumer>\r\n      {\r\n       (store) => {\r\n          let addPost = (text) => {\r\n            store.dispatch(addPostActionCreator(text));\r\n          };\r\n          let onPostChange = (text) => {\r\n            store.dispatch(updateNewPostTextActionCreator(text));\r\n          };\r\n          return <MyPosts onPostChange={onPostChange} addPost={addPost} profilePage={store.getState().profilePage}/>\r\n       }\r\n     }\r\n     </StoreContext.Consumer>\r\n   );\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage:state.profilePage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPostChange:(text) => {\r\n       dispatch(updateNewPostTextActionCreator(text));\r\n    },\r\n    addPost:(text) => {\r\n       console.log(\"newMessageChange\");\r\n       dispatch(addPostActionCreator(text));\r\n    }\r\n  }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = () =>{\r\n\treturn (\r\n\t  <div>\r\n\t\t<div className={classes.avaAndDescr}>\r\n\t\t    ava + description\r\n\t\t</div>\r\n\t  </div> \r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer.jsx\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo.jsx\";\r\n\r\nconst Profile = (props) => {\r\n\treturn <div className={classes.profileWrapper}>\r\n        <ProfileInfo/>\r\n        <MyPostsContainer/> \r\n      </div>;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport classes from \"./Users.module.css\";\r\nimport * as axios from 'axios';\r\n\r\nclass Users extends React.Component{\r\n\tcomponentDidMount() {\r\n\t\taxios.get(\"https://social-network.samuraijs.com/api/1.0/users\")\r\n        .then(response => {\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n\t}\r\n    render(){\r\n        let usersThis = this;\r\n        return <div className={classes.usersWrapper}>\r\n\t\t{\r\n\t\t\tthis.props.users.map(u => <div key={u.id} className={classes.usersItem}>\r\n\t\t\t\t<div className={classes.usersLeft}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={u.photoUrl?u.photoUrl:require(\"./../../../assets/cat2.jpg\")} className={classes.photo}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{u.followed ? \r\n\t\t\t\t\t\t <button className={classes.followButton} onClick={() => {usersThis.props.unfollow(u.id)}}>Unfollow</button> :\r\n\t\t\t\t\t\t <button className={classes.followButton} onClick={() => {usersThis.props.follow(u.id)}}>Follow</button>}\r\n\t\t\t\t\t</div>\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.usersRight}>\r\n\t\t\t\t\t<div className={classes.userName}>{u.name}</div>\r\n\t\t\t\t\t<div>{u.status}</div>\r\n\t\t\t\t\t<div>{/*u.location.country*/}Ukraine</div>\r\n\t\t\t\t\t<div>{/*u.location.city*/}Kharkov</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>)\r\n\t\t}\r\n\t</div>;\r\n    }\r\n}\r\n\r\nexport default Users;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {\r\n    users: [\r\n     /*\r\n     {id:1,photoUrl:\"https://www.dmitry-romanoff-music.com/wp-content/uploads/2019/05/cropped-gallery_img_1.jpg\",followed: false, fullName:\"Oleg\", status:\"I am a boss\", location:{city:\"Minsk\",country:\"Belarus\"}},\r\n     {id:2,photoUrl:\"https://www.dmitry-romanoff-music.com/wp-content/uploads/2019/05/cropped-gallery_img_1.jpg\", followed: true, fullName:\"Sasha\", status:\"I am a boss too\", location:{city:\"Moscow\",country:\"Russia\"}},\r\n     {id:3,photoUrl:\"https://www.dmitry-romanoff-music.com/wp-content/uploads/2019/05/cropped-gallery_img_1.jpg\", followed: false, fullName:\"Andrew\", status:\"I am a boss too\", location:{city:\"Kiev\",country:\"Ukraine\"}}\r\n     */\r\n    ]\t\r\n};\t  \r\n\r\nconst usersReducer = (state = initialState,action) => {\r\n\r\n    switch(action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                   if(u.id === action.userId){\r\n                       return {...u,followed:true}\r\n                   }\r\n                   return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                   if(u.id === action.userId){\r\n                       return {...u,followed:false}\r\n                   }\r\n                   return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,users:[...state.users,...action.users]\r\n            }    \r\n        default:\r\n            return state;            \r\n            \r\n    }\r\n}\r\n\r\n/*export const addPostActionCreator = (text) => ({type:ADD_POST,postMessage:text});\r\nexport const updateNewPostTextActionCreator = (text) => ({type:UPDATE_NEW_POST_TEXT,newText:text});*/\r\n\r\nexport const followAC = (userId) => ({type:FOLLOW,userId});\r\n\r\nexport const unfollowAC = (userId) => ({type:UNFOLLOW,userId});\r\n\r\nexport const setUsersAC = (users) => ({type:SET_USERS,users});\r\n\r\nexport default usersReducer; ","import React from 'react';\r\nimport Users from \"./Users\";\r\nimport {followAC,unfollowAC,setUsersAC} from \"./../../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers:state.usersPage.users\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n\t\t\tdispatch(followAC(userId));\r\n\t\t},\r\n\t\tunfollow: (userId) => {\r\n\t\t\tdispatch(unfollowAC(userId));\r\n\t\t},\r\n\t\tsetUsers:(users) => {\r\n            dispatch(setUsersAC(users));\r\n\t\t}\r\n\t}\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Users);","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n\treturn <div className={classes.message}>\r\n             {props.message} \r\n   \t       </div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = \"/dialogs/\"+props.id;\r\n\treturn <div className={classes.dialog}>\r\n             <NavLink to={path}>{props.name}</NavLink>\r\n           </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {NavLink} from 'react-router-dom';\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\r\n  let messagesElements = props.dialogsPage.messagesData.map(message => <Message message={message.message}/>);\r\n  \r\n  let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n  let onSendMessageClick = () => {\r\n    props.sendMessageClick();\r\n  }\r\n  let onNewMessageChange = (event) => {\r\n\tlet body = event.target.value;\r\n\tprops.newMessageChange(body);\r\n  }\r\n   return (\r\n   \t <div className={classes.dialogs}>\r\n   \t   <div className={classes.dialogsItems}>\r\n          {dialogsElements}\r\n   \t   </div>\r\n   \t   <div className={classes.messages}>\r\n   \t      <div>{messagesElements}</div>\r\n\t\t  <div>\r\n\t\t\t  <div>\r\n\t\t\t\t  <textarea className={classes.textArea} value={newMessageBody} onChange={onNewMessageChange} placeholder=\"Enter your message\"></textarea>\r\n\t\t\t  </div>\r\n\t\t\t  <div><button className={classes.btnSend} onClick={onSendMessageClick}>Send</button></div>\r\n\t\t  </div>\t \r\n   \t   </div>\r\n   \t </div>\r\n   )\r\n}\r\n\r\nexport default Dialogs;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [{id:1,name:\"Dimych\"},\r\n                 {id:2,name:\"Andrey\"},\r\n                 {id:3,name:\"Sveta\"},\r\n                 {id:4,name:\"Sasha\"},\r\n                 {id:5,name:\"Viktor\"},\r\n                 {id:6,name:\"Valera\"}],\r\n\r\n    messagesData: [{id:1,message:\"Hi\"},\r\n                   {id:2,message:\"How is your it-camasutra?\"},\r\n                   {id:3,message:\"Yo\"},\r\n                   {id:4,message:\"Yo\"},\r\n                   {id:5,message:\"Yo\"}],\r\n    newMessageBody:\"\"\t\t\t\t\t   \r\n};\r\n\r\nconst dialogsReducer = (state=initialState,action) => {\r\n\r\n    switch(action.type){\r\n        case UPDATE_NEW_MESSAGE_BODY:{\r\n            return {\r\n              ...state,\r\n              newMessageBody:action.body\r\n            };\r\n        }\r\n        case SEND_MESSAGE:{ \r\n            return {\r\n                ...state,\r\n                messagesData:[...state.messagesData,{id:6, message:state.newMessageBody}],\r\n                newMessageBody:\"\"\r\n            } \r\n        }\r\n        default:\r\n            return state;      \r\n    }  \r\n}\r\n\r\nexport const sendMessageCreator = () => ({type:SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({type:UPDATE_NEW_MESSAGE_BODY,body:body});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport Dialogs from './Dialogs';\r\nimport {updateNewMessageBodyCreator,sendMessageCreator} from './../../../redux/dialogs-reducer';\r\n//import StoreContext from \"./../../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\n/*const DialogsContainer = (props) => { \r\n  return (\r\n    <StoreContext.Consumer>\r\n    {\r\n      (store) => {\r\n          let sendMessageClick = () => {\r\n            store.dispatch(sendMessageCreator());\r\n          }\r\n          let newMessageChange = (body) => {\r\n            store.dispatch(updateNewMessageBodyCreator(body));\r\n          }\r\n          return <Dialogs dialogsPage={store.getState().dialogsPage} sendMessageClick={sendMessageClick} newMessageChange={newMessageChange}/>;\r\n      }\r\n    }\r\n    </StoreContext.Consumer>\r\n  );\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n     dialogsPage:state.dialogsPage\r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n     sendMessageClick:() => {\r\n        dispatch(sendMessageCreator());\r\n     },\r\n     newMessageChange:(body) => {\r\n        console.log(\"newMessageChange\");\r\n        dispatch(updateNewMessageBodyCreator(body));\r\n     }\r\n   }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs); \r\n\r\nexport default DialogsContainer;","import React from 'react';\nimport Navbar from './Navbar/Navbar.jsx';\nimport Profile from './Profile/Profile.jsx';\nimport UsersContainer from './Users/UsersContainer.jsx';\nimport DialogsContainer from './Dialogs/DialogsContainer.jsx';\nimport classes from './MainContent.module.css';\nimport {Route} from 'react-router-dom';\n\nconst MainContent = (props) => {\n  return(\n\t    <div className={\"clearfix \"+classes.mainContent}>\n\t      <Navbar/>\n\t      <div className={classes.appWrapperContent}>\n\t         <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n\t         <Route path='/profile' render={() => <Profile/>}/>\n\t\t\t <Route path='/users' render={() =><UsersContainer/>}/>\n\t      </div>\n\t    </div>\n  );\n}\n\nexport default MainContent;\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport MainContent from \"./components/MainContent/MainContent\";\nconst App = (props) => {\n  return(\n    <div className=\"app-wrapper\">\n      <Header/>\n      <MainContent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage:usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\"; \nimport {BrowserRouter, Route} from 'react-router-dom';\nimport StoreContext from \"./StoreContext\";\n//import {Provider} from \"./StoreContext\";\nimport {Provider} from \"react-redux\";\n\nlet rerenderEntireTree = (store) => {\n   ReactDOM.render(\n   <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>   \n   </BrowserRouter>, document.getElementById('root'));\n}\n\nrerenderEntireTree(store);\n\nstore.subscribe(()=>{\n    rerenderEntireTree(store);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react';\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport const Provider = (props) => {\r\n\r\n   return <StoreContext.Provider value={props.store}>\r\n        {props.children}\r\n    </StoreContext.Provider> \r\n\r\n}\r\n\r\nexport default StoreContext;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Users_usersWrapper__3ikIt\",\"photo\":\"Users_photo__3xXTq\",\"usersItem\":\"Users_usersItem__2_nJl\",\"usersLeft\":\"Users_usersLeft__1TW21\",\"usersRight\":\"Users_usersRight__3Vpg6\",\"followButton\":\"Users_followButton__39Pux\",\"userName\":\"Users_userName__3tyOX\"};"],"sourceRoot":""}